buildscript {
    ext.spring_boot_version = '2.1.3.RELEASE'
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.manulife'
version = '0.0.1'

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    jacksonVersion = "1.9.13"
    jackson2Version = "2.3.2"
    bouncycastleVersion = "1.59"
    esperVersion = "5.3.0"
    tikaVersion = "1.11"
    httpcomponentsHttpclientVersion = "4.5.1"
    springIntegrationVersion = "4.2.2.RELEASE"
    springCloudVersion = 'Greenwich.SR1'
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.springframework.cloud:spring-cloud-starter-oauth2'
    compile 'org.webjars:js-cookie:2.2.0'
    compile group: 'org.webjars', name: 'bootstrap', version: '4.3.1'
    compile("org.webjars:jquery:3.3.1")
    compile 'org.webjars:webjars-locator-core:0.37'

    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile group: 'io.micrometer', name: 'micrometer-core', version: '1.1.3'
    compile "org.bouncycastle:bcprov-jdk15on:$bouncycastleVersion"
    compile "org.bouncycastle:bcpg-jdk15on:$bouncycastleVersion"
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    
    runtime("org.springframework.boot:spring-boot-devtools")

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

mainClassName = 'MyHttpD'

jar {
    manifest {
        attributes(
                'Main-Class': MyHttpD
        )
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = "myhttpd"
    dockerfile = file("src/main/docker/Dockerfile")
    addFile {
        from jar
        rename { 'hello.jar' }
    }
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}